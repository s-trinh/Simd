language: cpp

os:
  - linux
  - osx

# Set Xcode version to 10.1 (default is 9.4)
osx_image: xcode10.1

compiler:
  - gcc
  - clang

env:
  - SANITIZER=true
  - SANITIZER=false

sudo: required
dist: xenial

before_install:
  - "if [ $TRAVIS_OS_NAME = 'linux' ]; then sudo apt-get update -qq; fi"
  - "if [ $TRAVIS_OS_NAME = 'linux' ]; then sudo apt-get install -qq valgrind; fi"
  - "if [ $TRAVIS_OS_NAME = 'osx' ]; then brew update; fi"
  - "if [ $TRAVIS_OS_NAME = 'osx' ]; then brew install valgrind; fi"

before_script:
  - mkdir build
  - cd build
  - if [ $SANITIZER = 'false' ]; then
        cmake ../prj/cmake -DCMAKE_BUILD_TYPE=Debug -DSIMD_AVX512=OFF
    elif [ $TRAVIS_OS_NAME = 'linux' ] && [ $TRAVIS_COMPILER = 'clang' ]; then
        cmake ../prj/cmake -DCMAKE_BUILD_TYPE=Debug -DSIMD_AVX512=OFF -DCMAKE_CXX_FLAGS=-fsanitize=memory;
    else
        cmake ../prj/cmake -DCMAKE_BUILD_TYPE=Debug -DSIMD_AVX512=OFF -DCMAKE_CXX_FLAGS=-fsanitize=address;
    fi

script:
  - make
  - cp -R ../data ../../
  - cat /proc/cpuinfo
  - ./Test
  - ./Test -fi=TransformImage
  - cd ../test
  - if [ $TRAVIS_OS_NAME = 'linux' ]; then
        export LIBSIMD=/home/travis/build/s-trinh/Simd/build/libSimd.a;
    else
        export LIBSIMD=/Users/travis/build/s-trinh/Simd/build/libSimd.a;
    fi;
  - if [ $SANITIZER = 'false' ]; then
        cmake . -DCMAKE_BUILD_TYPE=Debug -DLIBSIMD=$LIBSIMD;
    elif [ $TRAVIS_OS_NAME = 'linux' ] && [ $TRAVIS_COMPILER = 'clang' ]; then
        cmake . -DCMAKE_BUILD_TYPE=Debug -DLIBSIMD=$LIBSIMD -DCMAKE_CXX_FLAGS=-fsanitize=memory;
    else
        cmake . -DCMAKE_BUILD_TYPE=Debug -DLIBSIMD=$LIBSIMD -DCMAKE_CXX_FLAGS=-fsanitize=address;
    fi;
  - make
  - if [ $SANITIZER = 'false' ]; then
      valgrind --track-origins=yes ./UseFaceDetection;
      valgrind --track-origins=yes ./UseFaceDetection2;
    else
      ./UseFaceDetection;
      ./UseFaceDetection2;
    fi;
